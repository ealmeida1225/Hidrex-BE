# Generated by Django 5.2.7 on 2025-10-23 02:22

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("sub_name", models.CharField(blank=True, max_length=50, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("centroid_lat", models.FloatField()),
                ("centroid_lon", models.FloatField()),
            ],
            options={
                "db_table": "research_area",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AreaNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lat", models.FloatField()),
                ("lon", models.FloatField()),
                ("step", models.IntegerField()),
            ],
            options={
                "db_table": "research_areanode",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AreaType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("representation", models.CharField(max_length=7)),
                ("description", models.TextField()),
            ],
            options={
                "db_table": "research_areatype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DiaryPrecipitationClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lower_limmit", models.FloatField(blank=True, null=True)),
                ("upper_limmit", models.FloatField(blank=True, null=True)),
                ("classification", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "research_diaryprecipitationclassification",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MonthStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("max_registered_value", models.FloatField()),
                ("daily_mean", models.FloatField()),
                ("rainy_days_count", models.PositiveIntegerField()),
                ("rainy_streak_count", models.IntegerField()),
                ("rainy_streak_med_long", models.FloatField()),
                ("standard_deviation", models.FloatField()),
                ("variance", models.FloatField()),
                ("month", models.PositiveSmallIntegerField()),
                ("total_precipit", models.FloatField()),
            ],
            options={
                "db_table": "research_monthstatistics",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pluviometer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=15)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                (
                    "station_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("msnm", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "research_pluviometer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PluviometerType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Pluviometer type",
                "verbose_name_plural": "Pluviometer types",
                "db_table": "research_pluviometertype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrecipitationConcentrationIndexByArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("years_considered", models.PositiveSmallIntegerField()),
                ("a_value", models.FloatField()),
                ("b_value", models.FloatField()),
                ("r_2_value", models.FloatField()),
                ("ci_value", models.FloatField()),
                ("rainy_days", models.PositiveIntegerField()),
                ("max_rain_value", models.FloatField()),
                ("rainy_days_percent", models.FloatField()),
                ("rain_by_period_avg", models.FloatField()),
                ("rainy_days_by_period_avg", models.TextField()),
                ("total_rain_value", models.FloatField()),
            ],
            options={
                "db_table": "research_precipitationconcentrationindexbyarea",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrecipitationConcentrationIndexByPluviometer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("years_considered", models.PositiveSmallIntegerField()),
                ("a_value", models.FloatField()),
                ("b_value", models.FloatField()),
                ("r_2_value", models.FloatField()),
                ("ci_value", models.FloatField()),
                ("rainy_days", models.PositiveIntegerField()),
                ("total_rain_value", models.FloatField()),
                ("max_rain_value", models.FloatField()),
                ("rainy_days_percent", models.FloatField()),
                ("rain_by_period_avg", models.FloatField()),
                ("rainy_days_by_period_avg", models.TextField()),
            ],
            options={
                "db_table": "research_precipitationconcentrationindexbypluviometer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrecipitationConcentrationIndexMonthlyByArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("years_considered", models.PositiveSmallIntegerField()),
                ("a_value", models.FloatField()),
                ("b_value", models.FloatField()),
                ("r_2_value", models.FloatField()),
                ("ci_value", models.FloatField()),
                ("rainy_days", models.PositiveIntegerField()),
                ("max_rain_value", models.FloatField()),
                ("rainy_days_percent", models.FloatField()),
                ("rain_by_period_avg", models.FloatField()),
                ("rainy_days_by_period_avg", models.TextField()),
                ("month", models.PositiveSmallIntegerField()),
                ("total_rain_value", models.FloatField()),
            ],
            options={
                "db_table": "research_precipitationconcentrationindexmonthlybyarea",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrecipitationConcentrationIndexMonthlyByPluviometer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("years_considered", models.PositiveSmallIntegerField()),
                ("a_value", models.FloatField()),
                ("b_value", models.FloatField()),
                ("r_2_value", models.FloatField()),
                ("ci_value", models.FloatField()),
                ("rainy_days", models.PositiveIntegerField()),
                ("max_rain_value", models.FloatField()),
                ("rainy_days_percent", models.FloatField()),
                ("rain_by_period_avg", models.FloatField()),
                ("rainy_days_by_period_avg", models.TextField()),
                ("month", models.PositiveSmallIntegerField()),
                ("total_rain_value", models.FloatField()),
            ],
            options={
                "db_table": "research_precipitationconcentrationindexmonthlybypluviometer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Registers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("register_date", models.DateField()),
                ("rain_value", models.FloatField()),
            ],
            options={
                "db_table": "research_registers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="YearStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_precipit", models.FloatField()),
                ("max_registered_value", models.FloatField()),
                ("daily_mean", models.FloatField()),
                ("rainy_days_count", models.PositiveIntegerField()),
                ("rainy_streak_count", models.IntegerField()),
                ("rainy_streak_med_long", models.FloatField()),
                ("year", models.SmallIntegerField()),
            ],
            options={
                "db_table": "research_yearstatistics",
                "managed": False,
            },
        ),
    ]
